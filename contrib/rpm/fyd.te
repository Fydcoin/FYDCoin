policy_module(fyd, 1.100.1)

########################################
#
# Declarations
#

type fyd_t;
type fyd_exec_t;
init_daemon_domain(fyd_t, fyd_exec_t)

permissive fyd_t;

type fyd_initrc_exec_t;
init_script_file(fyd_initrc_exec_t)

type fyd_conf_t;
files_type(fyd_conf_t)

type fyd_var_lib_t;
files_type(fyd_var_lib_t)

type fyd_var_run_t;
files_type(fyd_var_run_t)

type fyd_port_t;
corenet_port(fyd_port_t)

########################################
#
# fyd local policy
#
allow fyd_t self:process { fork };

allow fyd_t self:fifo_file rw_fifo_file_perms;
allow fyd_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(fyd_t, fyd_conf_t, fyd_conf_t)
manage_files_pattern(fyd_t, fyd_conf_t, fyd_conf_t)

manage_dirs_pattern(fyd_t, fyd_var_lib_t, fyd_var_lib_t)
manage_files_pattern(fyd_t, fyd_var_lib_t, fyd_var_lib_t)
files_var_lib_filetrans(fyd_t, fyd_var_lib_t, { dir file })

manage_dirs_pattern(fyd_t, fyd_var_run_t, fyd_var_run_t)
manage_files_pattern(fyd_t, fyd_var_run_t, fyd_var_run_t)

sysnet_dns_name_resolve(fyd_t)
corenet_all_recvfrom_unlabeled(fyd_t)

allow fyd_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(fyd_t)
corenet_tcp_sendrecv_generic_node(fyd_t)
corenet_tcp_sendrecv_all_ports(fyd_t)
corenet_tcp_bind_generic_node(fyd_t)

gen_require(`
    type fyd_port_t;
')
allow fyd_t fyd_port_t:tcp_socket name_bind;

gen_require(`
    type fyd_port_t;
')
allow fyd_t fyd_port_t:tcp_socket name_connect;

domain_use_interactive_fds(fyd_t)

files_read_etc_files(fyd_t)

miscfiles_read_localization(fyd_t)

sysnet_dns_name_resolve(fyd_t)

allow fyd_t fyd_exec_t:file execute_no_trans;
allow fyd_t self:process setsched;
corecmd_exec_ls(fyd_t)
corenet_tcp_connect_http_port(fyd_t)
dev_read_urand(fyd_t)
fs_getattr_xattr_fs(fyd_t)
kernel_read_system_state(fyd_t)
